#lang sicp
(define (square x) (* x x))

(define (sum-of-squares x y)
  (+ (square x) (square y)))

(sum-of-squares 3 4)

(define (abs1 x)
  (cond ((> x 0) x)
        ((= x 0) 0)
        ((< x 0) (- x))))

(define (abs2 x)
  (cond ((< x 0) (- x))
        (else x)))

(define (abs x)
  (if (< x 0)
      (- x)
      x))

(define (>= x y)
  (not (< x y)))

(define (a-plus-abs-b a b)
  ((if (> b 0) + -) a b))

(define (p) (p))
(define (test x y)
  (if (= x 0)
      x
      y))

(abs -10)
(abs1 -10)
(abs2 -10)
(>= 10 1)
(>= 1 10)
(a-plus-abs-b 10 -9)
(a-plus-abs-b 10 9)
;; (test 0 (p)) forever loop when using Application Order Evaluation
;; It would't happen in Normal Order Evaluation 