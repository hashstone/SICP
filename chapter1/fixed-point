#lang sicp
(define tolerance 0.00001)

(define (fixed-point f guess)
  (define (close-enough? guess next)
    (< (abs (- guess next)) tolerance))

  (define (try-with guess)
    (display guess)
    (newline)
    (let ((next (f guess)))
    (if (close-enough? guess next)
        next
        (try-with next))))

  (try-with guess)
)

(define formula 
    (lambda (x)
        (/ (log 1000) 
           (log x))))

;(fixed-point cos 1.0)

;(fixed-point formula 2.0)

(fixed-point (lambda (y) (/ (+ y (formula y)) 2)) 2.0)